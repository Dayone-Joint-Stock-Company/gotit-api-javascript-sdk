/**
 * Sample API
 * Technical document APIs for API Version 4.
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: quang.huynh@gotit.vn
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CATEGORIESDETAIL model module.
 * @module model/CATEGORIESDETAIL
 * @version 4.0.0
 */
class CATEGORIESDETAIL {
    /**
     * Constructs a new <code>CATEGORIESDETAIL</code>.
     * @alias module:model/CATEGORIESDETAIL
     */
    constructor() { 
        
        CATEGORIESDETAIL.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CATEGORIESDETAIL</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CATEGORIESDETAIL} obj Optional instance to populate.
     * @return {module:model/CATEGORIESDETAIL} The populated <code>CATEGORIESDETAIL</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CATEGORIESDETAIL();

            if (data.hasOwnProperty('categoryId')) {
                obj['categoryId'] = ApiClient.convertToType(data['categoryId'], 'Number');
            }
            if (data.hasOwnProperty('categoryNm')) {
                obj['categoryNm'] = ApiClient.convertToType(data['categoryNm'], 'String');
            }
            if (data.hasOwnProperty('categoryImg')) {
                obj['categoryImg'] = ApiClient.convertToType(data['categoryImg'], 'String');
            }
            if (data.hasOwnProperty('slug')) {
                obj['slug'] = ApiClient.convertToType(data['slug'], 'String');
            }
            if (data.hasOwnProperty('order')) {
                obj['order'] = ApiClient.convertToType(data['order'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CATEGORIESDETAIL</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CATEGORIESDETAIL</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['categoryNm'] && !(typeof data['categoryNm'] === 'string' || data['categoryNm'] instanceof String)) {
            throw new Error("Expected the field `categoryNm` to be a primitive type in the JSON string but got " + data['categoryNm']);
        }
        // ensure the json data is a string
        if (data['categoryImg'] && !(typeof data['categoryImg'] === 'string' || data['categoryImg'] instanceof String)) {
            throw new Error("Expected the field `categoryImg` to be a primitive type in the JSON string but got " + data['categoryImg']);
        }
        // ensure the json data is a string
        if (data['slug'] && !(typeof data['slug'] === 'string' || data['slug'] instanceof String)) {
            throw new Error("Expected the field `slug` to be a primitive type in the JSON string but got " + data['slug']);
        }

        return true;
    }


}



/**
 * Category Id
 * @member {Number} categoryId
 */
CATEGORIESDETAIL.prototype['categoryId'] = undefined;

/**
 * Category Name
 * @member {String} categoryNm
 */
CATEGORIESDETAIL.prototype['categoryNm'] = undefined;

/**
 * Category Image
 * @member {String} categoryImg
 */
CATEGORIESDETAIL.prototype['categoryImg'] = undefined;

/**
 * Category Slug
 * @member {String} slug
 */
CATEGORIESDETAIL.prototype['slug'] = undefined;

/**
 * Category Short
 * @member {Number} order
 */
CATEGORIESDETAIL.prototype['order'] = undefined;






export default CATEGORIESDETAIL;

