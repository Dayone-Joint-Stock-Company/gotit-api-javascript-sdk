/**
 * Sample API
 * Technical document APIs for API Version 4.
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: quang.huynh@gotit.vn
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PRODUCTSDEFAULTLINKG model module.
 * @module model/PRODUCTSDEFAULTLINKG
 * @version 4.0.0
 */
class PRODUCTSDEFAULTLINKG {
    /**
     * Constructs a new <code>PRODUCTSDEFAULTLINKG</code>.
     * @alias module:model/PRODUCTSDEFAULTLINKG
     */
    constructor() { 
        
        PRODUCTSDEFAULTLINKG.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PRODUCTSDEFAULTLINKG</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PRODUCTSDEFAULTLINKG} obj Optional instance to populate.
     * @return {module:model/PRODUCTSDEFAULTLINKG} The populated <code>PRODUCTSDEFAULTLINKG</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PRODUCTSDEFAULTLINKG();

            if (data.hasOwnProperty('product_image')) {
                obj['product_image'] = ApiClient.convertToType(data['product_image'], 'String');
            }
            if (data.hasOwnProperty('link')) {
                obj['link'] = ApiClient.convertToType(data['link'], 'String');
            }
            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'String');
            }
            if (data.hasOwnProperty('serial')) {
                obj['serial'] = ApiClient.convertToType(data['serial'], 'String');
            }
            if (data.hasOwnProperty('product_id')) {
                obj['product_id'] = ApiClient.convertToType(data['product_id'], 'String');
            }
            if (data.hasOwnProperty('price_id')) {
                obj['price_id'] = ApiClient.convertToType(data['price_id'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'Number');
            }
            if (data.hasOwnProperty('expired_date')) {
                obj['expired_date'] = ApiClient.convertToType(data['expired_date'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PRODUCTSDEFAULTLINKG</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PRODUCTSDEFAULTLINKG</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['product_image'] && !(typeof data['product_image'] === 'string' || data['product_image'] instanceof String)) {
            throw new Error("Expected the field `product_image` to be a primitive type in the JSON string but got " + data['product_image']);
        }
        // ensure the json data is a string
        if (data['link'] && !(typeof data['link'] === 'string' || data['link'] instanceof String)) {
            throw new Error("Expected the field `link` to be a primitive type in the JSON string but got " + data['link']);
        }
        // ensure the json data is a string
        if (data['code'] && !(typeof data['code'] === 'string' || data['code'] instanceof String)) {
            throw new Error("Expected the field `code` to be a primitive type in the JSON string but got " + data['code']);
        }
        // ensure the json data is a string
        if (data['serial'] && !(typeof data['serial'] === 'string' || data['serial'] instanceof String)) {
            throw new Error("Expected the field `serial` to be a primitive type in the JSON string but got " + data['serial']);
        }
        // ensure the json data is a string
        if (data['product_id'] && !(typeof data['product_id'] === 'string' || data['product_id'] instanceof String)) {
            throw new Error("Expected the field `product_id` to be a primitive type in the JSON string but got " + data['product_id']);
        }
        // ensure the json data is a string
        if (data['price_id'] && !(typeof data['price_id'] === 'string' || data['price_id'] instanceof String)) {
            throw new Error("Expected the field `price_id` to be a primitive type in the JSON string but got " + data['price_id']);
        }
        // ensure the json data is a string
        if (data['expired_date'] && !(typeof data['expired_date'] === 'string' || data['expired_date'] instanceof String)) {
            throw new Error("Expected the field `expired_date` to be a primitive type in the JSON string but got " + data['expired_date']);
        }

        return true;
    }


}



/**
 * @member {String} product_image
 */
PRODUCTSDEFAULTLINKG.prototype['product_image'] = undefined;

/**
 * @member {String} link
 */
PRODUCTSDEFAULTLINKG.prototype['link'] = undefined;

/**
 * @member {String} code
 */
PRODUCTSDEFAULTLINKG.prototype['code'] = undefined;

/**
 * @member {String} serial
 */
PRODUCTSDEFAULTLINKG.prototype['serial'] = undefined;

/**
 * @member {String} product_id
 */
PRODUCTSDEFAULTLINKG.prototype['product_id'] = undefined;

/**
 * @member {String} price_id
 */
PRODUCTSDEFAULTLINKG.prototype['price_id'] = undefined;

/**
 * @member {Number} value
 */
PRODUCTSDEFAULTLINKG.prototype['value'] = undefined;

/**
 * @member {String} expired_date
 */
PRODUCTSDEFAULTLINKG.prototype['expired_date'] = undefined;






export default PRODUCTSDEFAULTLINKG;

