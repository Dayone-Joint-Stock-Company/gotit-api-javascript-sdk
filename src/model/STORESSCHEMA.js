/**
 * Sample API
 * Technical document APIs for API Version 4.
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: quang.huynh@gotit.vn
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The STORESSCHEMA model module.
 * @module model/STORESSCHEMA
 * @version 4.0.0
 */
class STORESSCHEMA {
    /**
     * Constructs a new <code>STORESSCHEMA</code>.
     * @alias module:model/STORESSCHEMA
     */
    constructor() { 
        
        STORESSCHEMA.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>STORESSCHEMA</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/STORESSCHEMA} obj Optional instance to populate.
     * @return {module:model/STORESSCHEMA} The populated <code>STORESSCHEMA</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new STORESSCHEMA();

            if (data.hasOwnProperty('storeId')) {
                obj['storeId'] = ApiClient.convertToType(data['storeId'], 'Number');
            }
            if (data.hasOwnProperty('storeNm')) {
                obj['storeNm'] = ApiClient.convertToType(data['storeNm'], 'String');
            }
            if (data.hasOwnProperty('storeAddr')) {
                obj['storeAddr'] = ApiClient.convertToType(data['storeAddr'], 'String');
            }
            if (data.hasOwnProperty('storeEm')) {
                obj['storeEm'] = ApiClient.convertToType(data['storeEm'], 'String');
            }
            if (data.hasOwnProperty('storePh')) {
                obj['storePh'] = ApiClient.convertToType(data['storePh'], 'String');
            }
            if (data.hasOwnProperty('lat')) {
                obj['lat'] = ApiClient.convertToType(data['lat'], 'Number');
            }
            if (data.hasOwnProperty('long')) {
                obj['long'] = ApiClient.convertToType(data['long'], 'Number');
            }
            if (data.hasOwnProperty('brandNm')) {
                obj['brandNm'] = ApiClient.convertToType(data['brandNm'], 'String');
            }
            if (data.hasOwnProperty('districtId')) {
                obj['districtId'] = ApiClient.convertToType(data['districtId'], 'Number');
            }
            if (data.hasOwnProperty('districtNm')) {
                obj['districtNm'] = ApiClient.convertToType(data['districtNm'], 'String');
            }
            if (data.hasOwnProperty('cityId')) {
                obj['cityId'] = ApiClient.convertToType(data['cityId'], 'Number');
            }
            if (data.hasOwnProperty('cityNm')) {
                obj['cityNm'] = ApiClient.convertToType(data['cityNm'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>STORESSCHEMA</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>STORESSCHEMA</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['storeNm'] && !(typeof data['storeNm'] === 'string' || data['storeNm'] instanceof String)) {
            throw new Error("Expected the field `storeNm` to be a primitive type in the JSON string but got " + data['storeNm']);
        }
        // ensure the json data is a string
        if (data['storeAddr'] && !(typeof data['storeAddr'] === 'string' || data['storeAddr'] instanceof String)) {
            throw new Error("Expected the field `storeAddr` to be a primitive type in the JSON string but got " + data['storeAddr']);
        }
        // ensure the json data is a string
        if (data['storeEm'] && !(typeof data['storeEm'] === 'string' || data['storeEm'] instanceof String)) {
            throw new Error("Expected the field `storeEm` to be a primitive type in the JSON string but got " + data['storeEm']);
        }
        // ensure the json data is a string
        if (data['storePh'] && !(typeof data['storePh'] === 'string' || data['storePh'] instanceof String)) {
            throw new Error("Expected the field `storePh` to be a primitive type in the JSON string but got " + data['storePh']);
        }
        // ensure the json data is a string
        if (data['brandNm'] && !(typeof data['brandNm'] === 'string' || data['brandNm'] instanceof String)) {
            throw new Error("Expected the field `brandNm` to be a primitive type in the JSON string but got " + data['brandNm']);
        }
        // ensure the json data is a string
        if (data['districtNm'] && !(typeof data['districtNm'] === 'string' || data['districtNm'] instanceof String)) {
            throw new Error("Expected the field `districtNm` to be a primitive type in the JSON string but got " + data['districtNm']);
        }
        // ensure the json data is a string
        if (data['cityNm'] && !(typeof data['cityNm'] === 'string' || data['cityNm'] instanceof String)) {
            throw new Error("Expected the field `cityNm` to be a primitive type in the JSON string but got " + data['cityNm']);
        }

        return true;
    }


}



/**
 * Store Id
 * @member {Number} storeId
 */
STORESSCHEMA.prototype['storeId'] = undefined;

/**
 * Store Name
 * @member {String} storeNm
 */
STORESSCHEMA.prototype['storeNm'] = undefined;

/**
 * Store Address
 * @member {String} storeAddr
 */
STORESSCHEMA.prototype['storeAddr'] = undefined;

/**
 * Store Email
 * @member {String} storeEm
 */
STORESSCHEMA.prototype['storeEm'] = undefined;

/**
 * Store Phone
 * @member {String} storePh
 */
STORESSCHEMA.prototype['storePh'] = undefined;

/**
 * Lat location on Google maps
 * @member {Number} lat
 */
STORESSCHEMA.prototype['lat'] = undefined;

/**
 * Long location on Google maps
 * @member {Number} long
 */
STORESSCHEMA.prototype['long'] = undefined;

/**
 * Brand Name
 * @member {String} brandNm
 */
STORESSCHEMA.prototype['brandNm'] = undefined;

/**
 * District code (Got It identifier)
 * @member {Number} districtId
 */
STORESSCHEMA.prototype['districtId'] = undefined;

/**
 * District name
 * @member {String} districtNm
 */
STORESSCHEMA.prototype['districtNm'] = undefined;

/**
 * City code (Got It identifier)
 * @member {Number} cityId
 */
STORESSCHEMA.prototype['cityId'] = undefined;

/**
 * City name
 * @member {String} cityNm
 */
STORESSCHEMA.prototype['cityNm'] = undefined;






export default STORESSCHEMA;

