/**
 * Sample API
 * Technical document APIs for API Version 4.
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: quang.huynh@gotit.vn
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import VOUCHERVSCHEMAProduct from './VOUCHERVSCHEMAProduct';

/**
 * The VOUCHERVSCHEMA model module.
 * @module model/VOUCHERVSCHEMA
 * @version 4.0.0
 */
class VOUCHERVSCHEMA {
    /**
     * Constructs a new <code>VOUCHERVSCHEMA</code>.
     * @alias module:model/VOUCHERVSCHEMA
     */
    constructor() { 
        
        VOUCHERVSCHEMA.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VOUCHERVSCHEMA</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VOUCHERVSCHEMA} obj Optional instance to populate.
     * @return {module:model/VOUCHERVSCHEMA} The populated <code>VOUCHERVSCHEMA</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VOUCHERVSCHEMA();

            if (data.hasOwnProperty('transactionRefId')) {
                obj['transactionRefId'] = ApiClient.convertToType(data['transactionRefId'], 'String');
            }
            if (data.hasOwnProperty('voucherCode')) {
                obj['voucherCode'] = ApiClient.convertToType(data['voucherCode'], 'String');
            }
            if (data.hasOwnProperty('voucherLink')) {
                obj['voucherLink'] = ApiClient.convertToType(data['voucherLink'], 'String');
            }
            if (data.hasOwnProperty('voucherLinkCode')) {
                obj['voucherLinkCode'] = ApiClient.convertToType(data['voucherLinkCode'], 'String');
            }
            if (data.hasOwnProperty('voucherImageLink')) {
                obj['voucherImageLink'] = ApiClient.convertToType(data['voucherImageLink'], 'String');
            }
            if (data.hasOwnProperty('voucherCoverLink')) {
                obj['voucherCoverLink'] = ApiClient.convertToType(data['voucherCoverLink'], 'String');
            }
            if (data.hasOwnProperty('voucherCoverLinkCode')) {
                obj['voucherCoverLinkCode'] = ApiClient.convertToType(data['voucherCoverLinkCode'], 'String');
            }
            if (data.hasOwnProperty('voucherSerial')) {
                obj['voucherSerial'] = ApiClient.convertToType(data['voucherSerial'], 'String');
            }
            if (data.hasOwnProperty('expiryDate')) {
                obj['expiryDate'] = ApiClient.convertToType(data['expiryDate'], 'String');
            }
            if (data.hasOwnProperty('product')) {
                obj['product'] = VOUCHERVSCHEMAProduct.constructFromObject(data['product']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VOUCHERVSCHEMA</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VOUCHERVSCHEMA</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['transactionRefId'] && !(typeof data['transactionRefId'] === 'string' || data['transactionRefId'] instanceof String)) {
            throw new Error("Expected the field `transactionRefId` to be a primitive type in the JSON string but got " + data['transactionRefId']);
        }
        // ensure the json data is a string
        if (data['voucherCode'] && !(typeof data['voucherCode'] === 'string' || data['voucherCode'] instanceof String)) {
            throw new Error("Expected the field `voucherCode` to be a primitive type in the JSON string but got " + data['voucherCode']);
        }
        // ensure the json data is a string
        if (data['voucherLink'] && !(typeof data['voucherLink'] === 'string' || data['voucherLink'] instanceof String)) {
            throw new Error("Expected the field `voucherLink` to be a primitive type in the JSON string but got " + data['voucherLink']);
        }
        // ensure the json data is a string
        if (data['voucherLinkCode'] && !(typeof data['voucherLinkCode'] === 'string' || data['voucherLinkCode'] instanceof String)) {
            throw new Error("Expected the field `voucherLinkCode` to be a primitive type in the JSON string but got " + data['voucherLinkCode']);
        }
        // ensure the json data is a string
        if (data['voucherImageLink'] && !(typeof data['voucherImageLink'] === 'string' || data['voucherImageLink'] instanceof String)) {
            throw new Error("Expected the field `voucherImageLink` to be a primitive type in the JSON string but got " + data['voucherImageLink']);
        }
        // ensure the json data is a string
        if (data['voucherCoverLink'] && !(typeof data['voucherCoverLink'] === 'string' || data['voucherCoverLink'] instanceof String)) {
            throw new Error("Expected the field `voucherCoverLink` to be a primitive type in the JSON string but got " + data['voucherCoverLink']);
        }
        // ensure the json data is a string
        if (data['voucherCoverLinkCode'] && !(typeof data['voucherCoverLinkCode'] === 'string' || data['voucherCoverLinkCode'] instanceof String)) {
            throw new Error("Expected the field `voucherCoverLinkCode` to be a primitive type in the JSON string but got " + data['voucherCoverLinkCode']);
        }
        // ensure the json data is a string
        if (data['voucherSerial'] && !(typeof data['voucherSerial'] === 'string' || data['voucherSerial'] instanceof String)) {
            throw new Error("Expected the field `voucherSerial` to be a primitive type in the JSON string but got " + data['voucherSerial']);
        }
        // ensure the json data is a string
        if (data['expiryDate'] && !(typeof data['expiryDate'] === 'string' || data['expiryDate'] instanceof String)) {
            throw new Error("Expected the field `expiryDate` to be a primitive type in the JSON string but got " + data['expiryDate']);
        }
        // validate the optional field `product`
        if (data['product']) { // data not null
          VOUCHERVSCHEMAProduct.validateJSON(data['product']);
        }

        return true;
    }


}



/**
 * TransactionRefId receive from client request
 * @member {String} transactionRefId
 */
VOUCHERVSCHEMA.prototype['transactionRefId'] = undefined;

/**
 * Voucher code. Contains 10 numbers, unique and not duplicated with any other voucher. For some brands that do not use Got It code but use integerernal code (Big C, Mobile World), the system returns the integerernal code.
 * @member {String} voucherCode
 */
VOUCHERVSCHEMA.prototype['voucherCode'] = undefined;

/**
 * Link of voucher
 * @member {String} voucherLink
 */
VOUCHERVSCHEMA.prototype['voucherLink'] = undefined;

/**
 * Last 8 characters of voucher link
 * @member {String} voucherLinkCode
 */
VOUCHERVSCHEMA.prototype['voucherLinkCode'] = undefined;

/**
 * Link of voucher image. To display vouchers as images
 * @member {String} voucherImageLink
 */
VOUCHERVSCHEMA.prototype['voucherImageLink'] = undefined;

/**
 * Cover link of voucher.
 * @member {String} voucherCoverLink
 */
VOUCHERVSCHEMA.prototype['voucherCoverLink'] = undefined;

/**
 * Last 8 characters of voucher cover link
 * @member {String} voucherCoverLinkCode
 */
VOUCHERVSCHEMA.prototype['voucherCoverLinkCode'] = undefined;

/**
 * Is a unique code to identify voucher link v and is not valid for use. For example: V1562342ET2
 * @member {String} voucherSerial
 */
VOUCHERVSCHEMA.prototype['voucherSerial'] = undefined;

/**
 * Voucher expiration date
 * @member {String} expiryDate
 */
VOUCHERVSCHEMA.prototype['expiryDate'] = undefined;

/**
 * @member {module:model/VOUCHERVSCHEMAProduct} product
 */
VOUCHERVSCHEMA.prototype['product'] = undefined;






export default VOUCHERVSCHEMA;

