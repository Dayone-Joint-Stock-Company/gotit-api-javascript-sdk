/**
 * Sample API
 * Technical document APIs for API Version 4.
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: quang.huynh@gotit.vn
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import HTTPBADREQUEST from '../model/HTTPBADREQUEST';
import HTTPINTERNALSERVERERROR from '../model/HTTPINTERNALSERVERERROR';
import HTTPNOTFOUND from '../model/HTTPNOTFOUND';
import HTTPUNAUTHORIZED from '../model/HTTPUNAUTHORIZED';
import REQUESTCREATEVOUCHERLINKE from '../model/REQUESTCREATEVOUCHERLINKE';
import REQUESTCREATEVOUCHERLINKG from '../model/REQUESTCREATEVOUCHERLINKG';
import REQUESTCREATEVOUCHERLINKV from '../model/REQUESTCREATEVOUCHERLINKV';
import VOUCHERERESPONSE from '../model/VOUCHERERESPONSE';
import VOUCHERGRESPONSE from '../model/VOUCHERGRESPONSE';
import VOUCHERVRESPONSE from '../model/VOUCHERVRESPONSE';

/**
* Voucher service.
* @module api/VoucherApi
* @version 4.0.0
*/
export default class VoucherApi {

    /**
    * Constructs a new VoucherApi. 
    * @alias module:api/VoucherApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createVoucherLinkE operation.
     * @callback module:api/VoucherApi~createVoucherLinkECallback
     * @param {String} error Error message, if any.
     * @param {module:model/VOUCHERERESPONSE} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create voucher link e
     * Create voucher link e
     * @param {String} xGIAuthorization Authorization
     * @param {Object} opts Optional parameters
     * @param {module:model/REQUESTCREATEVOUCHERLINKE} [REQUESTCREATEVOUCHERLINKE] 
     * @param {module:api/VoucherApi~createVoucherLinkECallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VOUCHERERESPONSE}
     */
    createVoucherLinkE(xGIAuthorization, opts, callback) {
      opts = opts || {};
      let postBody = opts['REQUESTCREATEVOUCHERLINKE'];
      // verify the required parameter 'xGIAuthorization' is set
      if (xGIAuthorization === undefined || xGIAuthorization === null) {
        throw new Error("Missing the required parameter 'xGIAuthorization' when calling createVoucherLinkE");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-GI-Authorization': xGIAuthorization
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = VOUCHERERESPONSE;
      return this.apiClient.callApi(
        '/api/v4.0/vouchers/e', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createVoucherLinkG operation.
     * @callback module:api/VoucherApi~createVoucherLinkGCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VOUCHERGRESPONSE} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create voucher link g
     * Create voucher link g
     * @param {String} xGIAuthorization Authorization
     * @param {Object} opts Optional parameters
     * @param {module:model/REQUESTCREATEVOUCHERLINKG} [REQUESTCREATEVOUCHERLINKG] 
     * @param {module:api/VoucherApi~createVoucherLinkGCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VOUCHERGRESPONSE}
     */
    createVoucherLinkG(xGIAuthorization, opts, callback) {
      opts = opts || {};
      let postBody = opts['REQUESTCREATEVOUCHERLINKG'];
      // verify the required parameter 'xGIAuthorization' is set
      if (xGIAuthorization === undefined || xGIAuthorization === null) {
        throw new Error("Missing the required parameter 'xGIAuthorization' when calling createVoucherLinkG");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-GI-Authorization': xGIAuthorization
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = VOUCHERGRESPONSE;
      return this.apiClient.callApi(
        '/api/v4.0/vouchers/g', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createVoucherLinkV operation.
     * @callback module:api/VoucherApi~createVoucherLinkVCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VOUCHERVRESPONSE} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create voucher link v
     * Create voucher link v
     * @param {String} xGIAuthorization Authorization
     * @param {Object} opts Optional parameters
     * @param {module:model/REQUESTCREATEVOUCHERLINKV} [REQUESTCREATEVOUCHERLINKV] 
     * @param {module:api/VoucherApi~createVoucherLinkVCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VOUCHERVRESPONSE}
     */
    createVoucherLinkV(xGIAuthorization, opts, callback) {
      opts = opts || {};
      let postBody = opts['REQUESTCREATEVOUCHERLINKV'];
      // verify the required parameter 'xGIAuthorization' is set
      if (xGIAuthorization === undefined || xGIAuthorization === null) {
        throw new Error("Missing the required parameter 'xGIAuthorization' when calling createVoucherLinkV");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-GI-Authorization': xGIAuthorization
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = VOUCHERVRESPONSE;
      return this.apiClient.callApi(
        '/api/v4.0/vouchers/v', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
